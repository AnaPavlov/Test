{"version":3,"sources":["Components/Header/Header.module.css","Components/ClearBtn/ClearBtn.module.css","Components/Header/Header.js","Components/NewTask/NewTask.js","Components/Tasks/Task/Task.js","Components/Tasks/Tasks.js","Components/Layout/Layout.js","Components/ClearBtn/ClearBtn.js","App.js","registerServiceWorker.js","index.js","Components/Tasks/Task/Task.module.css","Components/Layout/Layout.module.css"],"names":["module","exports","header","props","reminder","unfinishedTasks","tasks","forEach","task","isChecked","pluralSufix","className","styles","newTask","onSubmit","submit","name","placeholder","defaultValue","required","type","defaultChecked","status","onClick","toggleChecked","trashIcon","click","icon","faTrash","map","index","Task","key","Math","random","toString","slice","bind","layout","Layout","wrapper","children","clearBtn","length","marginBottom","clear","App","state","addTaskHandler","event","preventDefault","target","inpTask","value","setState","handleDeleteTask","splice","clearBtnHandler","window","confirm","toggleCheckedHandler","Header","this","NewTask","Tasks","ClearBtn","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2b255f9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Usye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marginBottom\":\"ClearBtn_marginBottom__2qWsh\"};","import React from 'react';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst header = props => {\r\n  let reminder = null;\r\n  let unfinishedTasks = 0;\r\n  props.tasks.forEach(task => {\r\n    if (task.isChecked === false) {\r\n      unfinishedTasks++;\r\n    }\r\n  });\r\n\r\n  if (unfinishedTasks > 0) {\r\n    const pluralSufix = unfinishedTasks === 1 ? 'thing' : 'things';\r\n    reminder = (\r\n      <p>\r\n        You've got {unfinishedTasks} {pluralSufix} to do\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <h2>Keep yourself organized...</h2>\r\n      <h1>Todo List</h1>\r\n      {reminder}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from 'react';\r\n\r\nimport styles from './NewTask.module.css';\r\n\r\nconst newTask = props => {\r\n    return (\r\n        <form className={styles} onSubmit={props.submit}>\r\n          <input name=\"inpTask\" placeholder=\"enter new task\" defaultValue=\"\" required />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default newTask;","import React from 'react';\r\n\r\nimport styles from './Task.module.css';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst task = props => {\r\n  return (\r\n    <div className={styles.task}>\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={props.status}\r\n          onClick={props.toggleChecked}\r\n        />\r\n        <p>{props.task}</p>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        className={styles.trashIcon}\r\n        onClick={props.click}\r\n        icon={faTrash}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default task;\r\n","import React from 'react';\r\nimport Task from './Task/Task.js';\r\n\r\nconst tasks = props => {\r\n  return props.tasks.map((task, index) => {\r\n    return (\r\n      <Task\r\n        key={Math.random().toString(36).slice(2)}\r\n        task={task.task}\r\n        click={props.click.bind(this, index)}\r\n        toggleChecked={props.toggleChecked.bind(this, index)}\r\n        status={task.isChecked}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nexport default tasks;\r\n","import React from 'react';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nconst layout = props => {\r\n  return (\r\n    <div className={styles.Layout}>\r\n      <div className={styles.wrapper}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default layout;\r\n","import React from 'react';\r\n\r\nimport styles from './ClearBtn.module.css';\r\n\r\nconst clearBtn = props => {\r\n  const button =\r\n    props.tasks.length < 1 ? null : (\r\n      <button className={styles.marginBottom} onClick={props.clear}>\r\n        Clear\r\n      </button>\r\n    );\r\n  return button;\r\n};\r\n\r\nexport default clearBtn;\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from './Components/Header/Header';\r\nimport NewTask from './Components/NewTask/NewTask';\r\nimport Tasks from './Components/Tasks/Tasks';\r\nimport Layout from './Components/Layout/Layout';\r\nimport ClearBtn from './Components/ClearBtn/ClearBtn';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    tasks: []\r\n  };\r\n\r\n  addTaskHandler = event => {\r\n    event.preventDefault();\r\n    const newTask = { task: event.target.inpTask.value, isChecked: false };\r\n    event.target.inpTask.value = '';\r\n    const tasks = [...this.state.tasks, newTask];\r\n    this.setState({\r\n      tasks: tasks\r\n    });\r\n  };\r\n\r\n  handleDeleteTask = index => {\r\n    const tasks = [...this.state.tasks];\r\n    tasks.splice(index, 1);\r\n    this.setState({\r\n      tasks: tasks\r\n    });\r\n  };\r\n\r\n  clearBtnHandler = () => {\r\n    const confirmation = window.confirm(\r\n      'Are you sure you want to delete all tasks?'\r\n    );\r\n    if (confirmation) {\r\n      this.setState({\r\n        tasks: []\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleCheckedHandler = index => {\r\n    const tasks = [...this.state.tasks];\r\n    tasks[index].isChecked = !tasks[index].isChecked;\r\n    this.setState({\r\n      tasks: tasks\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Header tasks={this.state.tasks} />\r\n        <NewTask submit={this.addTaskHandler} />\r\n        <Tasks\r\n          tasks={this.state.tasks}\r\n          click={this.handleDeleteTask}\r\n          toggleChecked={this.toggleCheckedHandler}\r\n        />\r\n        <ClearBtn clear={this.clearBtnHandler} tasks={this.state.tasks} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport styles from './index.module.css';\r\n\r\nReactDOM.render(<App className={styles}/>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1u1Qc\",\"trashIcon\":\"Task_trashIcon__1-KoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__s7_Ew\",\"wrapper\":\"Layout_wrapper__2hKtK\"};"],"sourceRoot":""}